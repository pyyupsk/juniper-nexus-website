generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id         Int      @id @default(autoincrement())
  discord_id String   @unique
  username   String
  created_at DateTime @default(now())

  Profile      Profile[]
  Achievements Achievements[]
  Coins        Coins[]
  VoiceLevels  VoiceLevels[]
}

model Profile {
  id         Int      @id @default(autoincrement())
  user_id    Int
  full_name  String
  address    String
  age        Int
  job        String
  email      String
  phone      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  Users Users @relation(fields: [user_id], references: [id])
}

model Achievements {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String   @db.VarChar(1000)
  image_url   String
  user_id     Int
  created_at  DateTime @default(now())

  Users Users @relation(fields: [user_id], references: [id])
}

enum Type {
  EARNED
  SPENT
  DEDUCTED
}

model Coins {
  id         Int      @id @default(autoincrement())
  user_id    Int
  event_id   Int
  type       Type
  amount     Int
  reason     String
  operator   String
  created_at DateTime @default(now())

  Users Users  @relation(fields: [user_id], references: [id])
  Event Events @relation(fields: [event_id], references: [id])
}

model Events {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String   @db.VarChar(1000)
  start_date  DateTime
  end_date    DateTime
  created_at  DateTime @default(now())

  Coins Coins[]
}

model VoiceLevels {
  id         Int      @id @default(autoincrement())
  user_id    Int
  time_spent Int // in minutes
  created_at DateTime @default(now())

  Users Users @relation(fields: [user_id], references: [id])
}
